-- =====================================================
-- üìù TABELA DE LOGS DE WEBHOOKS
-- =====================================================

-- 1. Criar tabela de logs de webhooks
CREATE TABLE IF NOT EXISTS public.webhook_logs (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    webhook_type TEXT NOT NULL CHECK (webhook_type IN ('mercadopago', 'whatsapp')),
    event_type TEXT,
    payload JSONB,
    headers JSONB,
    processed BOOLEAN DEFAULT FALSE,
    error_message TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. √çndices para performance
CREATE INDEX IF NOT EXISTS idx_webhook_logs_type ON public.webhook_logs(webhook_type);
CREATE INDEX IF NOT EXISTS idx_webhook_logs_processed ON public.webhook_logs(processed);
CREATE INDEX IF NOT EXISTS idx_webhook_logs_created_at ON public.webhook_logs(created_at DESC);

-- 3. √çndice para busca no JSON
CREATE INDEX IF NOT EXISTS idx_webhook_logs_data_payment_id ON public.webhook_logs USING GIN ((payload->'data'->>'id'));

-- 4. Coment√°rios para documenta√ß√£o
COMMENT ON TABLE public.webhook_logs IS 'Logs de todos os webhooks recebidos';
COMMENT ON COLUMN public.webhook_logs.payload IS 'Dados completos do webhook em formato JSON';
COMMENT ON COLUMN public.webhook_logs.processed IS 'Se o webhook foi processado com sucesso';

-- 5. Habilitar RLS
ALTER TABLE public.webhook_logs ENABLE ROW LEVEL SECURITY;

-- 6. Pol√≠tica para permitir inser√ß√£o de webhooks (sem autentica√ß√£o)
DROP POLICY IF EXISTS "Permitir inser√ß√£o de webhooks" ON public.webhook_logs;
CREATE POLICY "Permitir inser√ß√£o de webhooks"
    ON public.webhook_logs FOR INSERT
    WITH CHECK (true);

-- 7. Pol√≠tica para leitura apenas por usu√°rios autenticados (para debug)
DROP POLICY IF EXISTS "Usu√°rios autenticados podem ver logs" ON public.webhook_logs;
CREATE POLICY "Usu√°rios autenticados podem ver logs"
    ON public.webhook_logs FOR SELECT
    USING (auth.uid() IS NOT NULL);

-- ‚úÖ TABELA DE WEBHOOK LOGS CRIADA COM SUCESSO
