-- =====================================================
-- üí∞ TABELA DE TRANSA√á√ïES FINANCEIRAS
-- =====================================================

-- 1. Criar tabela de transa√ß√µes
CREATE TABLE IF NOT EXISTS public.transactions (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    description TEXT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    type TEXT NOT NULL CHECK (type IN ('income', 'expense')),
    category TEXT NOT NULL,
    date DATE NOT NULL DEFAULT CURRENT_DATE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. √çndices para performance
CREATE INDEX IF NOT EXISTS idx_transactions_user_id ON public.transactions(user_id);
CREATE INDEX IF NOT EXISTS idx_transactions_date ON public.transactions(date DESC);
CREATE INDEX IF NOT EXISTS idx_transactions_type ON public.transactions(type);
CREATE INDEX IF NOT EXISTS idx_transactions_category ON public.transactions(category);

-- 3. Habilitar RLS
ALTER TABLE public.transactions ENABLE ROW LEVEL SECURITY;

-- 4. Pol√≠ticas de seguran√ßa
DROP POLICY IF EXISTS "Usu√°rios podem ver pr√≥prias transa√ß√µes" ON public.transactions;
CREATE POLICY "Usu√°rios podem ver pr√≥prias transa√ß√µes"
    ON public.transactions FOR SELECT
    USING (auth.uid() = user_id);

DROP POLICY IF EXISTS "Usu√°rios podem inserir pr√≥prias transa√ß√µes" ON public.transactions;
CREATE POLICY "Usu√°rios podem inserir pr√≥prias transa√ß√µes"
    ON public.transactions FOR INSERT
    WITH CHECK (auth.uid() = user_id);

DROP POLICY IF EXISTS "Usu√°rios podem atualizar pr√≥prias transa√ß√µes" ON public.transactions;
CREATE POLICY "Usu√°rios podem atualizar pr√≥prias transa√ß√µes"
    ON public.transactions FOR UPDATE
    USING (auth.uid() = user_id);

DROP POLICY IF EXISTS "Usu√°rios podem deletar pr√≥prias transa√ß√µes" ON public.transactions;
CREATE POLICY "Usu√°rios podem deletar pr√≥prias transa√ß√µes"
    ON public.transactions FOR DELETE
    USING (auth.uid() = user_id);

-- 5. Trigger para updated_at
DROP TRIGGER IF EXISTS handle_updated_at ON public.transactions;
CREATE TRIGGER handle_updated_at
    BEFORE UPDATE ON public.transactions
    FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();

-- 6. Coment√°rios para documenta√ß√£o
COMMENT ON TABLE public.transactions IS 'Transa√ß√µes financeiras dos usu√°rios';
COMMENT ON COLUMN public.transactions.amount IS 'Valor da transa√ß√£o (positivo para receitas, negativo para despesas)';
COMMENT ON COLUMN public.transactions.type IS 'Tipo: income (receita) ou expense (despesa)';

-- ‚úÖ TABELA DE TRANSA√á√ïES CRIADA COM SUCESSO
